Script started on Tue 02 Apr 2019 09:48:18 AM EDT
cmd38@gold23:~/232/proj03$ cat *.h *.cpp *.txt
/*
 * CDShell.h
 *
 *  Created on: Mar 30, 2019, for CS 232 at Calvin College
 *      Author: Catherine DeJager and Daniel Ackuaku
 */

#ifndef CDSHELL_H_
#define CDSHELL_H_
#include "Path.h"
#include "Prompt.h"
#include "CommandLine.h"

class CDShell {
public:
	CDShell();
	void run();
	virtual ~CDShell();
private:
//	Path myPath;
	Prompt myPrompt;
};

#endif /* CDSHELL_H_ */
/*
 * CommandLine.h
 *
 *  Created on: Mar 13, 2019, for CS 232 at Calvin College
 *      Author: Catherine DeJager
 */

#ifndef COMMANDLINE_H_
#define COMMANDLINE_H_

#include <iostream>
using namespace std;

class CommandLine {
public:
	CommandLine(istream& in);
	char* getCommand() const { return myArgVecPtr[0]; };
	int getArgCount() const { return myArgCount; };
	char** getArgVector() const { return myArgVecPtr; };
	// return a pointer to the ith (zero-relative) command-line 'word' (i.e., argv[i]).
	char* getArgVector(int i) const;
	bool noAmpersand() const { return myNoAmpersand; };
	virtual ~CommandLine();
private:
	int myArgCount; 	 // the number of command-line arguments on the command-line (i.e., argc).
	char** myArgVecPtr;	 // a pointer to a char* array, each entry of which points to one 'word' of the command-line (i.e., argv).
	bool myNoAmpersand;  // true if and only if no ampersand was given on the command-line
};

#endif /* COMMANDLINE_H_ */
/*
 * CommandLineTester.h
 *
 *  Created on: Mar 13, 2019
 *      Author: cmd38
 */

#ifndef COMMANDLINETESTER_H_
#define COMMANDLINETESTER_H_

#include "CommandLine.h"

class CommandLineTester {
public:
	CommandLineTester();
	void runTests();
	void testConstructor();
	virtual ~CommandLineTester();
};

#endif /* COMMANDLINETESTER_H_ */
/*
 * Path.h
 *
 *  Created on: Mar 25, 2019, for CS 232 at Calvin College
 *      Author: Daniel Ackuaku
 */

#ifndef PATH_H_
#define PATH_H_
#include <iostream>
#include <stdio.h>
#include <string.h>
#include <fstream>
#include <sstream>
#include <vector>
#include <stdlib.h>
#include <dirent.h>
#include <sys/types.h>
using namespace std;

class Path {
public:
	Path();
	virtual ~Path();
	int find(const string& program) const;
	string getDirectory(int i) const ;
	vector<string> returnDIR() const { return directory; }



private: 
	vector<string> directory;
	// int index;					
	char * pPath;
	friend class PathTester;
};

#endif /* PATH_H_ */
/*
 * PathTester.h
 *
 *  Created on: Mar 25, 2019, for CS 232 at Calvin College
 *      Author: Daniel Ackuaku
 */

#ifndef PATHTESTER_H_
#define PATHTESTER_H_
#include "Path.h"

class PathTester {
public:
	PathTester();
	void runTests();
	void testConstructor();
	void testFind();
	void testFindcmd38();
	virtual ~PathTester();
};

#endif /* PATHTESTER_H_ */
/*
 * Prompt.h
 *
 *  Created on: Mar 25, 2019, for CS 232 at Calvin College
 *      Author: Daniel Ackuaku
 */

#ifndef PROMPT_H_
#define PROMPT_H_
#include "Path.h"
#include <unistd.h>

class Prompt {
public:
	Prompt();
    string get() const ;
	virtual ~Prompt();
    




private: 
	string currentDir;
};


#endif
/*
 * CDShell.cpp
 *
 *  Created on: Mar 30, 2019, for CS 232 at Calvin College
 *      Author: Catherine D and Daniel Ackuaku
 */

#include "CDShell.h"
#include <unistd.h>  // fork
#include <sys/wait.h>  // waitpid
#include <sys/param.h>  // MAXPATHLEN
#include <cerrno>		// errno

CDShell::CDShell() {
	myPrompt = Prompt();
}

// execute your shell, using CommandLine, Path, and Prompt. Read in user commands and execute them appropriately.
void CDShell::run() {
	Path myPath;
	bool to_exit = false;  // flag to indicate whether we want to exit the program or not
	while (! to_exit) {
		cout << myPrompt.get() << flush;

		CommandLine comm_line(cin);
		string command = comm_line.getCommand();
		if (command == "exit") {
			to_exit = true;
		}
		else if (command == "cd") {
			// change directory (look at the accepted answer on https://stackoverflow.com/questions/10792227/c-change-working-directory-from-user-input)
			char* newDir = comm_line.getArgVector(1);
			int rc = chdir(newDir);
			if (rc == -1) {
				cerr << "failed to change directory: " << strerror(errno) << endl;
			}
			myPrompt = Prompt(); // make a new Prompt because the current working directory has changed
		}
		else if (command == "pwd") {
			// do getcwd (adopted from the accepted answer on https://stackoverflow.com/questions/10792227/c-change-working-directory-from-user-input)
			char buffer[MAXPATHLEN];
			char *path = getcwd(buffer, MAXPATHLEN);
			if (!path) {
				cerr << "failed to get current working directory: " << strerror(errno) << endl;
			} else {
				string current_path = path;
				cout << current_path << endl;
			}
		}
		else {  // execute the system call
			// find the filename specified in command. If the command can't be found, output an error and continue
			int index = myPath.find(command);
			if (index == -1) {
				cerr << command << ": command not found" << endl;
				continue;
			}
			string filename = myPath.getDirectory(myPath.find(command));
			filename = filename + "/" + command;
			pid_t pid = fork();
			if (pid == 0) {  // we are child process
				int status = execve(filename.c_str(), comm_line.getArgVector(), NULL);
				if (status == -1) {
					cerr << "Error executing command: " << strerror(errno) << endl;
				}
			}
			else if (pid == -1) {
				cerr << "Error with fork" << strerror(errno) << endl;
			}
			else if (comm_line.noAmpersand()) {
				waitpid(pid, NULL, 0); // wait for the command to finish
			}
		}
	}
}

CDShell::~CDShell() {

}

/*
 * CommandLine.cpp
 *
 *  Created on: Mar 13, 2019, for CS 232 at Calvin College
 *  Used for constructing a CommandLine from an istream
 *      Author: Catherine DeJager
 */

#include "CommandLine.h"
#include <queue>
#include <stdlib.h>  // calloc, exit, free
#include <cstring>
#include <string>
#include <stdexcept>

/*
 * construct a CommandLine by reading a command-line from in, parsing it, and building instance variables for argc and argv
 * (you may find the calloc() and free() system calls to be of use here)
 * Assumption: the istream will be terminated with newline (which cin is).
 */
CommandLine::CommandLine(istream& in) {
	myNoAmpersand = true;
	string word;
	queue<string> words;
	while (in.peek() != '\n') {
		in >> word;
		if (word == "&") {
			myNoAmpersand = false;
		}
		else {
			words.push(word);
		}
	}
	in.ignore();  // read in and ignore the newline character

	myArgCount = words.size();
	myArgVecPtr = (char**) calloc (myArgCount, sizeof(char*) + 1);  // + 1 to leave space for NULL terminator
	// check if memory has been successfully allocated or not
	if (myArgVecPtr == NULL) {
		cerr << "Failed to allocate ArgVecPtr. Exiting now." << endl;
		exit(-1);  // TODO: is this how we want to handle that problem?
	}

	for (int i = 0; i < myArgCount; i++) {
		word = words.front();
		myArgVecPtr[i] = new char[word.size() + 1];
		// copy the word as a character array into argv. strcpy copies the null character
		strcpy(myArgVecPtr[i], word.c_str());
		words.pop();
	}
}

char* CommandLine::getArgVector(int i) const {
	if (i < 0 or i > myArgCount - 1) {
		throw out_of_range("getArgVector(int i): index must be non-negative and less than myArgCount");
	}
	return myArgVecPtr[i];
}

// CommandLine destructor deallocates myArgVecPtr and the char arrays in myArgVec
CommandLine::~CommandLine() {
	for (int i = 0; i < myArgCount; i++) {
		delete [] myArgVecPtr[i];
		myArgVecPtr[i] = NULL;
	}
	free(myArgVecPtr);
}
/*
 * CommandLineTester.cpp
 *
 *  Created on: Mar 13, 2019, for CS 232 at Calvin College
 *      Author: Catherine DeJager
 */

#include "CommandLineTester.h"
#include <cassert>
#include <istream>
#include <fstream>
#include <string.h>
using namespace std;

CommandLineTester::CommandLineTester() {

}

void CommandLineTester::runTests() {
	testConstructor();
}

void CommandLineTester::testConstructor() {
	cout << "Testing constructor... " << flush;
	string infilename = "cl_test_0.txt";
	ifstream fin(infilename.c_str());
	assert(fin.is_open());
	CommandLine c0 = CommandLine(fin);
	fin.close();
	assert(c0.getArgCount() == 1);
	assert(c0.noAmpersand());
	assert(strcmp(c0.getCommand(), "ps") == 0);
	cout << "0 " << flush;

	infilename = "cl_test_01.txt";
	ifstream fin1(infilename.c_str());
	assert(fin1.is_open());
	CommandLine c1 = CommandLine(fin1);
	fin1.close();
	assert(c1.getArgCount() == 4);
	assert(! c1.noAmpersand());
	assert(strcmp(c1.getCommand(), "ls") == 0);
	assert(strcmp(c1.getArgVector(1), "..") == 0);
	assert(strcmp(c1.getArgVector(2), "-a") == 0);
	assert(strcmp(c1.getArgVector(3), "--directory") == 0);
	try {
		assert(c1.getArgVector(4) == NULL);
	} catch (out_of_range &e) {
		cout << "1 " << flush;
	}
	try {
		assert(c1.getArgVector(-1) == NULL);
	} catch (out_of_range &e) {
		cout << "2 " << flush;
	}
	cout << "Passed!" << endl;
}

CommandLineTester::~CommandLineTester() {

}

/*
 * main.cpp
 *
 *  Created on: Mar 13, 2019
 *      Author: Catherine DeJager and Daniel Ackuaku
 */

#include "CommandLineTester.h"
#include "PathTester.h"
#include "CDShell.h"

int main() {
	CommandLineTester ClTester = CommandLineTester();
	ClTester.runTests();
	PathTester PTester;
	PTester.runTests();
	CDShell shell;
	shell.run();
	return 0;
}

/*
 * Path.cpp
 *
 *  Created on: Mar 25, 2019, for CS 232 at Calvin College
 *      Author: Daniel Ackuaku
 */

#include "Path.h"


/* constructor
 * @param: none
 * Precondition: none
 * Postcondition:   a Path constructed from the PATH environment variable
 * return: Null
 */
Path::Path() {
	string newParse = getenv("PATH");
	stringstream stream (newParse);
	string transfer;
	while(getline(stream, transfer, ':')){

		directory.push_back(transfer);
	}

}


/* find
 * @param: none
 * Precondition: none
 * Postcondition:   returns the index of the directory containing program or  Path constructed from the PATH environment variable
 * return: int
 */
int Path::find(const string& program) const {	
	DIR *dir;	
	struct dirent *entry; 						// handle to read from the directory
		for (unsigned i = 0; i < directory.size() ; i++) {
			if ((dir = opendir(directory[i].c_str())) != NULL) {

				while( (entry = readdir(dir)) != NULL) {

					if (entry->d_name == program ) {
						closedir(dir);
						return i;
					} else {
						 
					}
				}
			}
			closedir(dir);
		}
	return -1;
}

/* getDirectory
 * @param: none
 * Precondition: none
 * Postcondition:   an accessor that returns the current value of the directory.
 * return: string
 */
string Path::getDirectory(int i) const {
	if (i >= directory.size() || i < 0) {
		cerr << "getDirectory(): index out of bounds error" << endl;
		return NULL;
	}
	return directory[i];
}



Path::~Path()  {

}

/*
 * PathTester.cpp
 *
 *  Created on: Mar 25, 2019, for CS 232 at Calvin College
 *      Author: Daniel Ackuaku and Catherine DeJager
 */

#include "PathTester.h"
#include "Path.h"
#include <assert.h>


//Path test;

PathTester::PathTester() {

}

void PathTester::runTests() {
	cout << "Testing Path..." << endl;
	testConstructor();
	testFind();
	testFindcmd38();
	cout << "All tests passed!" << endl;
}

void PathTester::testConstructor(){
	Path test;
	
	vector<string> dir;
	dir = test.returnDIR();
	dir.size();
//	cout << dir.size() << endl;
//	for (unsigned i = 0 ; i < dir.size(); i++ ) {
//			cout <<  dir[i] << endl;
//
//	}
	cout << "..... 0 ....." << endl;
}

void PathTester::testFind() {
	Path test1;
	vector<string> dir;
	dir = test1.returnDIR();
//	cout << test1.find("bin2c") << endl ;
	assert ( test1.find("bin2c") != -1 );
	cout << "..... 1 ....." << endl; 
//	cout << test1.find("cat") << "\t" <<"LOOK HERE!!"<<endl;
	cout << "..... 2 ....." << endl; 
//	cout <<   test1.find("zsh") << "\t" << "THIS IS WHERE ZSH IS !! "<<endl ;
	assert ( test1.find("zsh") == 4);  // 5 on Daniel's machine
}

void PathTester::testFindcmd38() {
	Path test;
	vector<string> dir;
	// test find on cmd38's account in ulab
	dir = test.returnDIR();
//	cout << "size is " << dir.size() << endl;
	int index = test.find("cat");
//	cout << index << endl;
//	cout << test.getDirectory(index) << endl;
}


PathTester::~PathTester() {

}

/*
 * Prompt.cpp
 *
 *  Created on: Mar 25, 2019, for CS 232 at Calvin College
 *      Author: Daniel Ackuaku
 */

#include "Prompt.h"

/* constructor
 * @param: none
 * Precondition: none
 * Postcondition:   a constructor that builds a Prompt as the full path to the working directory
 * return: none
 */
Prompt::Prompt() {
     char handle[360];
     string dummy = getcwd(handle ,360);

     if (getcwd == NULL) {
         cerr << "Propmt(): Error creating prompt" << endl;
     } else {
         currentDir = dummy+'$'+' '; 
     }

    }

/* get
 * @param: none
 * Precondition: none
 * Postcondition:   an accessor that returns the current value of the Prompt.
 * return: string
 */
    string Prompt::get() const {
        return currentDir;
    }


Prompt::~Prompt(){

    }
ls .. -a --directory &
ps
cmd38@gold23:~/232/proj03$ cd Debug
cmd38@gold23:~/232/proj03/Debug$ make all
make: Nothing to be done for 'all'.
cmd38@gold23:~/232/proj03/Debug$ cd ..
cmd38@gold23:~/232/proj03$ ./Deg bug/proj03
Testing constructor... 0 1 2 Passed!
Testing Path...
..... 0 .....
..... 1 .....
..... 2 .....
All tests passed!
/home/cmd38/232/proj03$ ls
CDShell.cpp	       CommandLineTester.h  PathTester.h   cl_test_01.txt
CDShell.h	       Debug		    Prompt.cpp	   main.cpp
CommandLine.cpp        Path.cpp		    Prompt.h	   notes.md
CommandLine.h	       Path.h		    README.md	   typescript
CommandLineTester.cpp  PathTester.cpp	    cl_test_0.txt
/home/cmd38/232/proj03$ cd ..
/home/cmd38/232$ pwd
/home/cmd38/232
/home/cmd38/232$ ls -a
.  ..  proj02  proj03  proj15  project-01
/home/cmd38/232$ ls -l /home/cs/
total 100
drwxrwsr-x 3 admin facstf         4096 Jan 24 07:30 101
drwxrwsr-x 5 admin facstf         4096 Jan 23 09:56 106
drwxrwsr-x 3 admin facstf         4096 Jan 23 10:47 108
drwxrwsr-x 5 admin facstf         4096 Jan 23 10:47 112
drwxrwsr-x 2 admin facstf         4096 Jan 23 09:57 202
drwxrwsr-x 2 admin facstf         4096 Jan 23 09:59 212
drwxrwsr-x 4 admin facstf         4096 Jan 23 10:48 214
drwxrwsr-x 6 admin facstf         4096 Mar  5 09:07 232
drwxrwsr-x 2 admin facstf         4096 Jan 23 10:24 262
drwxrwsr-x 2 admin facstf         4096 Jan 23 10:24 300
drwxrwsr-x 2 admin facstf         4096 Jan 23 10:25 312
drwxrwsr-x 4 admin facstf         4096 Jan 23 10:29 332
drwxrwsr-x 2 admin facstf         4096 Jan 23 10:29 336
drwxrwsr-x 2 admin facstf         4096 Jan 23 10:29 337
drwxrwsr-x 2 admin facstf         4096 Jan 23 10:44 342
drwxrwsr-x 3 admin facstf         4096 Jan 23 10:48 344
drwxrwsr-x 3 admin facstf         4096 Jan 23 10:48 352
drwxrwsr-x 2 admin facstf         4096 Jan 23 10:45 364
drwxrwsr-x 4 admin facstf         4096 Jan 23 10:46 374
drwxrwsr-x 2 admin facstf         4096 Jan 23 10:46 384
drwxrwsr-x 2 admin facstf         4096 Jan 23 10:46 390
drwxrwsr-x 2 admin facstf         4096 Jan 23 10:46 394
drwxrwsr-x 2 admin facstf         4096 Jan 23 10:46 398
drwxrwsr-x 3 admin seniorprojects 4096 May 17  2018 seniorprojects
drwxrwsr-x 3 admin facstf         4096 Jan 23 10:47 w61
/home/cmd38/232$ ps -ax &
/home/cmd38/232$   PID TTY      STAT   TIME COMMAND
    1 ?        Ss     0:03 /sbin/init nomdmonddf nomdmonisw dis_ucode_ldr
    2 ?        S      0:00 [kthreadd]
    4 ?        I<     0:00 [kworker/0:0H]
    6 ?        I<     0:00 [mm_percpu_wq]
    7 ?        S      0:00 [ksoftirqd/0]
    8 ?        I      0:06 [rcu_sched]
    9 ?        I      0:00 [rcu_bh]
   10 ?        S      0:00 [migration/0]
   11 ?        S      0:00 [watchdog/0]
   12 ?        S      0:00 [cpuhp/0]
   13 ?        S      0:00 [cpuhp/1]
   14 ?        S      0:00 [watchdog/1]
   15 ?        S      0:00 [migration/1]
   16 ?        S      0:00 [ksoftirqd/1]
   18 ?        I<     0:00 [kworker/1:0H]
   19 ?        S      0:00 [cpuhp/2]
   20 ?        S      0:00 [watchdog/2]
   21 ?        S      0:00 [migration/2]
   22 ?        S      0:00 [ksoftirqd/2]
   24 ?        I<     0:00 [kworker/2:0H]
   25 ?        S      0:00 [cpuhp/3]
   26 ?        S      0:00 [watchdog/3]
   27 ?        S      0:00 [migration/3]
   28 ?        S      0:00 [ksoftirqd/3]
   30 ?        I<     0:00 [kworker/3:0H]
   31 ?        S      0:00 [cpuhp/4]
   32 ?        S      0:00 [watchdog/4]
   33 ?        S      0:00 [migration/4]
   34 ?        S      0:00 [ksoftirqd/4]
   36 ?        I<     0:00 [kworker/4:0H]
   37 ?        S      0:00 [cpuhp/5]
   38 ?        S      0:00 [watchdog/5]
   39 ?        S      0:00 [migration/5]
   40 ?        S      0:00 [ksoftirqd/5]
   42 ?        I<     0:00 [kworker/5:0H]
   43 ?        S      0:00 [cpuhp/6]
   44 ?        S      0:00 [watchdog/6]
   45 ?        S      0:00 [migration/6]
   46 ?        S      0:00 [ksoftirqd/6]
   48 ?        I<     0:00 [kworker/6:0H]
   49 ?        S      0:00 [cpuhp/7]
   50 ?        S      0:00 [watchdog/7]
   51 ?        S      0:00 [migration/7]
   52 ?        S      0:00 [ksoftirqd/7]
   54 ?        I<     0:00 [kworker/7:0H]
   55 ?        S      0:00 [kdevtmpfs]
   56 ?        I<     0:00 [netns]
   57 ?        S      0:00 [rcu_tasks_kthre]
   58 ?        S      0:00 [kauditd]
   62 ?        S      0:00 [khungtaskd]
   63 ?        S      0:00 [oom_reaper]
   64 ?        I<     0:00 [writeback]
   65 ?        S      0:00 [kcompactd0]
   66 ?        SN     0:00 [ksmd]
   67 ?        SN     0:00 [khugepaged]
   68 ?        I<     0:00 [crypto]
   69 ?        I<     0:00 [kintegrityd]
   70 ?        I<     0:00 [kblockd]
   76 ?        I<     0:00 [ata_sff]
   77 ?        I<     0:00 [md]
   78 ?        I<     0:00 [edac-poller]
   79 ?        I<     0:00 [devfreq_wq]
   80 ?        I<     0:00 [watchdogd]
   83 ?        S      0:00 [kswapd0]
   84 ?        S      0:00 [ecryptfs-kthrea]
  126 ?        I<     0:00 [kthrotld]
  127 ?        I<     0:00 [acpi_thermal_pm]
  131 ?        I<     0:00 [ipv6_addrconf]
  140 ?        I<     0:00 [kstrp]
  157 ?        I<     0:00 [charger_manager]
  218 ?        S      0:00 [scsi_eh_0]
  219 ?        I<     0:00 [scsi_tmf_0]
  220 ?        S      0:00 [scsi_eh_1]
  221 ?        I<     0:00 [scsi_tmf_1]
  222 ?        S      0:00 [scsi_eh_2]
  223 ?        I<     0:00 [scsi_tmf_2]
  224 ?        S      0:00 [scsi_eh_3]
  225 ?        I<     0:00 [scsi_tmf_3]
  226 ?        S      0:00 [scsi_eh_4]
  227 ?        I<     0:00 [scsi_tmf_4]
  228 ?        S      0:00 [scsi_eh_5]
  229 ?        I<     0:00 [scsi_tmf_5]
  236 ?        S      0:00 [nvidia-modeset]
  241 ?        I<     0:00 [kworker/6:1H]
  264 ?        S      0:00 [jbd2/sda5-8]
  265 ?        I<     0:00 [ext4-rsv-conver]
  306 ?        I<     0:00 [kworker/1:1H]
  307 ?        I<     0:02 [kworker/7:1H]
  308 ?        I<     0:00 [kworker/4:1H]
  321 ?        Ss     0:00 /lib/systemd/systemd-journald
  334 ?        I<     0:00 [rpciod]
  335 ?        I<     0:00 [xprtiod]
  360 ?        Ss     0:00 /lib/systemd/systemd-udevd
  373 ?        S<     0:00 [loop0]
  374 ?        S<     0:00 [loop1]
  376 ?        S<     0:00 [loop2]
  381 ?        S<     0:00 [loop3]
  382 ?        S<     0:00 [loop4]
  406 ?        I<     0:00 [kworker/5:1H]
  419 ?        I<     0:00 [kworker/2:1H]
  458 ?        I<     0:00 [kworker/3:1H]
  460 ?        I<     0:00 [kworker/0:1H]
  484 ?        Ss     0:00 /usr/sbin/rpc.gssd
  588 ?        S      0:00 [irq/28-mei_me]
  748 ?        S      0:00 [UVM global queu]
  751 ?        S      0:00 [UVM Tools Event]
  930 ?        Ss     0:02 /usr/bin/dbus-daemon --system --address=systemd: --no
  935 ?        Ss     0:00 avahi-daemon: running [gold23.local]
  936 ?        S      0:00 avahi-daemon: chroot helper
  943 ?        Ssl    0:00 /usr/sbin/rsyslogd -n
  949 ?        Ss     0:00 /usr/sbin/inetd -i
  957 ?        Ss     0:00 /usr/sbin/atd -f
  964 ?        Ss     0:00 /usr/sbin/cron -f
  965 ?        Ss     0:00 /usr/sbin/acpid
  972 ?        Ss     0:02 /usr/sbin/sssd -i -f
  976 ?        Ssl    0:00 /usr/sbin/NetworkManager --no-daemon
  978 ?        Ssl    0:08 /usr/lib/snapd/snapd
 1021 ?        Ssl    0:00 /usr/lib/colord/colord
 1022 ?        S      0:06 /usr/lib/x86_64-linux-gnu/sssd/sssd_be --domain cs.ca
 1041 ?        S      0:00 /usr/lib/postgresql/9.5/bin/postgres -D /var/lib/post
 1045 ?        I      0:00 [kworker/0:1]
 1086 ?        I<     0:00 [iprt-VBoxWQueue]
 1090 ?        S      0:01 /usr/lib/x86_64-linux-gnu/sssd/sssd_nss --uid 0 --gid
 1091 ?        S      0:00 /usr/lib/x86_64-linux-gnu/sssd/sssd_sudo --uid 0 --gi
 1092 ?        S      0:00 /usr/lib/x86_64-linux-gnu/sssd/sssd_pam --uid 0 --gid
 1093 ?        S      0:00 /usr/lib/x86_64-linux-gnu/sssd/sssd_ssh --uid 0 --gid
 1095 ?        S      0:00 /usr/lib/x86_64-linux-gnu/sssd/sssd_pac --uid 0 --gid
 1096 ?        Ssl    0:00 /usr/lib/policykit-1/polkitd --no-debug
 1100 ?        S      0:00 [iprt-VBoxTscThr]
 1112 ?        Ss     0:00 /lib/systemd/systemd-logind
 1113 ?        Ssl    0:01 /usr/lib/accountsservice/accounts-daemon
 1116 ?        Ss     0:00 postgres: checkpointer process   
 1117 ?        Ss     0:00 postgres: writer process   
 1118 ?        Ss     0:00 postgres: wal writer process   
 1119 ?        Ss     0:00 postgres: autovacuum launcher process   
 1120 ?        Ss     0:00 postgres: stats collector process   
 1158 ?        I      0:00 [kworker/1:1]
 1309 ?        Ss     0:00 /sbin/dhclient -1 -v -pf /run/dhclient.enp0s25.pid -l
 1417 ?        Ss     0:00 /usr/sbin/certmonger -S -p /var/run/certmonger.pid -n
 1419 ?        Ssl    0:00 /usr/bin/whoopsie -f
 1425 ?        Ss     0:00 /usr/games/bzfs -advertise NONE
 1429 ?        Ss     0:00 /usr/sbin/oddjobd -n -p /var/run/oddjobd.pid -t 300
 1432 ?        Ss     0:02 /usr/bin/perl /usr/local/scripts/computerinfodaemon.p
 1434 ?        Ssl    1:48 /usr/bin/mongod --config /etc/mongod.conf
 1435 ?        Ss     0:00 /usr/sbin/sshd -D
 1451 ?        I<     0:00 [nfsiod]
 1478 ?        S      0:00 [NFSv4 callback]
 1625 ?        SLsl   0:00 /usr/sbin/lightdm
 1775 ?        Ss     0:00 /usr/lib/postfix/sbin/master
 1777 ?        S      0:00 qmgr -l -t unix -u
 1908 ?        Ssl    0:01 /usr/bin/ruby /usr/bin/puppet agent
 1937 ?        SNsl   0:00 /usr/lib/rtkit/rtkit-daemon
 1944 tty1     Ss+    0:00 /sbin/agetty --noclear tty1 linux
 2384 ?        Ss     0:01 /usr/sbin/ntpd -p /var/run/ntpd.pid -c /var/lib/ntp/n
 2972 ?        Sl     0:00 lightdm --session-child 13 22
 2981 ?        I      0:00 [kworker/u16:4]
 2985 ?        Ss     0:00 /lib/systemd/systemd --user
 2986 ?        S      0:00 (sd-pam)
 2990 ?        Ss     0:00 /sbin/upstart --user
 3058 ?        S      0:00 upstart-udev-bridge --daemon --user
 3060 ?        Ss     0:00 ssh-agent -s
 3065 ?        Ss     0:00 dbus-daemon --fork --session --address=unix:abstract=
 3104 ?        S      0:00 upstart-file-bridge --daemon --user
 3106 ?        S      0:00 upstart-dbus-bridge --daemon --session --user --bus-n
 3107 ?        S      0:00 upstart-dbus-bridge --daemon --system --user --bus-na
 3112 ?        Ss     0:00 gpg-agent --homedir /home/cmd38/.gnupg --use-standard
 3121 ?        Ss     0:00 /bin/sh /etc/xdg/xfce4/xinitrc -- /etc/X11/xinit/xser
 3132 ?        Sl     0:00 xfce4-session
 3136 ?        S      0:00 /usr/lib/x86_64-linux-gnu/xfce4/xfconf/xfconfd
 3143 ?        S      0:03 xfwm4 --replace
 3147 ?        Sl     0:00 xfce4-panel
 3149 ?        S      0:00 Thunar --daemon
 3151 ?        Sl     0:00 xfdesktop
 3153 ?        Sl     0:00 update-notifier
 3154 ?        Sl     0:00 /usr/bin/python3 /usr/bin/blueman-applet
 3155 ?        Sl     0:00 nm-applet
 3157 ?        Ssl    0:00 xfsettingsd
 3159 ?        Ssl    0:00 xfce4-power-manager
 3162 ?        Sl     0:00 /usr/lib/policykit-1-gnome/polkit-gnome-authenticatio
 3165 ?        Sl     0:00 light-locker
 3168 ?        Sl     0:00 /usr/bin/python3 /usr/share/system-config-printer/app
 3169 ?        S      0:00 xscreensaver -no-splash
 3172 ?        Ssl    0:00 xfce4-volumed
 3183 ?        Sl     0:00 /usr/lib/dconf/dconf-service
 3202 ?        Sl     0:00 /usr/lib/at-spi2-core/at-spi-bus-launcher
 3209 ?        S<l    0:00 /usr/bin/pulseaudio --start --log-target=syslog
 3211 ?        S      0:00 /usr/bin/dbus-daemon --config-file=/etc/at-spi2/acces
 3213 ?        Sl     0:00 /usr/lib/at-spi2-core/at-spi2-registryd --use-gnome-s
 3223 ?        Sl     0:00 /usr/lib/gvfs/gvfsd
 3228 ?        Sl     0:00 /usr/lib/gvfs/gvfsd-fuse /run/user/50948/gvfs -f -o b
 3243 ?        Sl     0:00 /usr/lib/x86_64-linux-gnu/xfce4/panel/wrapper-1.0 /us
 3248 ?        S      0:00 /usr/lib/x86_64-linux-gnu/xfce4/panel/wrapper-1.0 /us
 3249 ?        Sl     0:00 /usr/lib/x86_64-linux-gnu/xfce4/panel/wrapper-2.0 /us
 3263 ?        S      0:00 upstart --user --startup-event indicator-services-sta
 3265 ?        Ssl    0:00 /usr/lib/x86_64-linux-gnu/indicator-messages/indicato
 3266 ?        Ssl    0:00 /usr/lib/x86_64-linux-gnu/indicator-bluetooth/indicat
 3267 ?        Ssl    0:00 /usr/lib/x86_64-linux-gnu/indicator-power/indicator-p
 3268 ?        Ssl    0:00 /usr/lib/x86_64-linux-gnu/indicator-datetime/indicato
 3269 ?        Ssl    0:00 /usr/lib/x86_64-linux-gnu/indicator-keyboard/indicato
 3270 ?        Ssl    0:00 /usr/lib/x86_64-linux-gnu/indicator-sound/indicator-s
 3271 ?        Ssl    0:00 /usr/lib/x86_64-linux-gnu/indicator-session/indicator
 3274 ?        Ssl    0:00 /usr/lib/x86_64-linux-gnu/indicator-application/indic
 3326 ?        I      0:00 [kworker/6:1]
 3424 ?        S      0:00 /opt/eclipse2018.12/eclipse
 3446 ?        Sl     2:39 /usr/bin/java -Dosgi.requiredJavaVersion=1.8 -Dosgi.i
 3499 ?        S      0:00 /usr/lib/bluetooth/obexd
 3604 ?        Sl     0:00 /usr/lib/gvfs/gvfs-udisks2-volume-monitor
 3609 ?        Sl     0:00 /usr/lib/gvfs/gvfs-goa-volume-monitor
 3614 ?        Sl     0:00 /usr/lib/gvfs/gvfs-mtp-volume-monitor
 3619 ?        Sl     0:00 /usr/lib/gvfs/gvfs-afc-volume-monitor
 3625 ?        Sl     0:00 /usr/lib/gvfs/gvfs-gphoto2-volume-monitor
 3633 ?        Sl     0:00 /usr/lib/gvfs/gvfsd-trash --spawner :1.25 /org/gtk/gv
 3645 ?        Sl     0:00 /usr/lib/gvfs/gvfsd-metadata
 3735 ?        Sl     0:00 /opt/google/chrome/chrome
 3740 ?        S      0:00 cat
 3741 ?        S      0:00 cat
 3744 ?        S      0:00 /opt/google/chrome/chrome --type=zygote --enable-cras
 3745 ?        S      0:00 /opt/google/chrome/nacl_helper
 3748 ?        S      0:00 /opt/google/chrome/chrome --type=zygote --enable-cras
 3772 ?        Sl     0:00 /opt/google/chrome/chrome --type=gpu-process --field-
 3777 ?        Sl     0:00 /opt/google/chrome/chrome --type=utility --field-tria
 3793 ?        S      0:00 /opt/google/chrome/chrome --type=-broker
 3800 ?        Sl     1:13 /usr/lib/firefox/firefox
 3866 ?        Sl     1:05 /usr/lib/firefox/firefox -contentproc -childID 1 -isF
 3914 ?        Ssl    0:00 /usr/lib/upower/upowerd
 3929 ?        Sl     0:03 /usr/lib/firefox/firefox -contentproc -childID 2 -isF
 3987 ?        Sl     0:09 /usr/lib/firefox/firefox -contentproc -childID 3 -isF
 4060 ?        I      0:00 [kworker/3:0]
 4077 ?        Sl     1:05 xfce4-taskmanager
 4118 ?        Sl     0:14 /usr/lib/firefox/firefox -contentproc -childID 4 -isF
 4385 ?        I      0:00 [kworker/4:2]
 4483 ?        Sl     0:08 /usr/lib/firefox/firefox -contentproc -childID 5 -isF
 4498 ?        Ssl    0:03 /usr/lib/udisks2/udisksd --no-debug
 4537 ?        Sl     0:03 /usr/lib/firefox/firefox -contentproc -childID 6 -isF
 4577 ?        Sl     0:03 /usr/lib/firefox/firefox -contentproc -childID 7 -isF
 4616 ?        S      0:00 pickup -l -t unix -u -c
 5857 ?        I      0:00 [kworker/3:1]
 5863 ?        I      0:00 [kworker/5:2]
 5979 ?        I      0:00 [kworker/7:0]
 6034 ?        S      0:00 /home/cmd38/232/proj03/Debug/proj03
 6072 ?        Sl     0:22 /usr/lib/firefox/firefox -contentproc -childID 8 -isF
 6113 ?        S      0:00 /home/cmd38/232/proj03/Debug/proj03
 6165 ?        Sl     0:03 /usr/lib/firefox/firefox -contentproc -childID 9 -isF
 6271 ?        I      0:00 [kworker/5:1]
 6388 ?        S      0:00 /home/cmd38/232/proj03/Debug/proj03
 6395 ?        S      0:00 /home/cmd38/232/proj03/Debug/proj03
 6433 ?        S      0:00 /home/cmd38/232/proj03/Debug/proj03
 6438 ?        S      0:00 /home/cmd38/232/proj03/Debug/proj03
 6448 ?        Sl     0:00 /usr/bin/xfce4-terminal
 6452 ?        S      0:00 gnome-pty-helper
 6453 pts/13   Ss     0:00 bash
 6468 ?        I      0:00 [kworker/u16:0]
 6471 ?        S      0:00 /home/cmd38/232/proj03/Debug/proj03
 6485 ?        I      0:00 [kworker/0:2]
 6501 ?        S      0:00 /home/cmd38/232/proj03/Debug/proj03
 6746 ?        S      0:00 /home/cmd38/232/proj03/Debug/proj03
 6799 ?        S      0:00 /home/cmd38/232/proj03/Debug/proj03
 6846 ?        S      0:00 /home/cmd38/232/proj03/Debug/proj03
 6862 ?        S      0:00 /home/cmd38/232/proj03/Debug/proj03
 7024 ?        S      0:00 /home/cmd38/232/proj03/Debug/proj03
 7090 ?        Z      0:00 [ps] <defunct>
 7152 ?        I      0:00 [kworker/7:1]
 7330 ?        I      0:00 [kworker/6:2]
 7336 ?        I      0:00 [kworker/u16:1]
 7377 ?        I      0:00 [kworker/7:2]
 7469 ?        S      0:00 /home/cmd38/232/proj03/Debug/proj03
 7530 ?        S      0:00 /home/cmd38/232/proj03/Debug/proj03
 8814 pts/13   S+     0:00 script
 8815 pts/20   Ss     0:00 bash -i
 8821 ?        I      0:00 [kworker/5:0]
 8824 ?        I      0:00 [kworker/u16:2]
 8830 pts/20   S+     0:00 ./Debug/proj03
 8849 pts/20   R+     0:00 ps -ax
 9447 ?        S<L    0:00 /usr/bin/atop -a -w /var/log/atop/atop_20190402 600
15083 tty7     Ss+  302:02 /usr/lib/xorg/Xorg -core :0 -seat seat0 -auth /var/ru
15090 ?        Ss     0:00 /usr/bin/nvidia-persistenced --user root --no-persist
15094 ?        S      0:24 [irq/30-nvidia]
15095 ?        S      0:00 [nvidia]
18966 ?        I      0:00 [kworker/2:2]
29965 ?        I      0:00 [kworker/2:1]
30047 ?        I      0:01 [kworker/1:0]
30401 ?        I      0:00 [kworker/4:1]
30405 ?        Ss     0:00 /usr/sbin/cupsd -l
30406 ?        Ssl    0:00 /usr/sbin/cups-browsed
ls &
/home/cmd38/232$ proj02	proj03	proj15	project-01
exit
cmd38@gold23:~/232/proj03$ ./Debug/proj03
Testing constructor... 0 1 2 Passed!
Testing Path...
..... 0 .....
..... 1 .....
..... 2 .....
All tests passed!
/home/cmd38/232/proj03$ ls dog
ls: cannot access 'dog': No such file or directory
/home/cmd38/232/proj03$ cat cats.txt
cat: cats.txt: No such file or directory
/home/cmd38/232/proj03$ cp proj    ../proj15 proj03
cp: omitting directory '../proj15'
/home/cmd38/232/proj03$ ext it
cmd38@gold23:~/232/proj03$ exit

Script done on Tue 02 Apr 2019 09:51:30 AM EDT
